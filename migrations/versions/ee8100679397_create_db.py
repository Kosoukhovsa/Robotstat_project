"""create db

Revision ID: ee8100679397
Revises: 
Create Date: 2020-02-15 15:48:52.470196

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ee8100679397'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Clinics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Complications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.Column('type', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Complications_type'), 'Complications', ['type'], unique=False)
    op.create_table('DiagnosesItems',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.Column('mkb10', sa.String(length=20), nullable=True),
    sa.Column('type', sa.String(length=30), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('description')
    )
    op.create_index(op.f('ix_DiagnosesItems_type'), 'DiagnosesItems', ['type'], unique=False)
    op.create_table('Doctors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('second_name', sa.String(length=100), nullable=True),
    sa.Column('fio', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.Column('type', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Events_type'), 'Events', ['type'], unique=False)
    op.create_table('IndicatorsGroups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('OperationSteps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('order')
    )
    op.create_table('Patients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('snils_hash', sa.String(length=128), nullable=True),
    sa.Column('birthdate', sa.Date(), nullable=True),
    sa.Column('sex', sa.String(length=1), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Patients_sex'), 'Patients', ['sex'], unique=False)
    op.create_table('Profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Prosthesis',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.Column('firm', sa.String(length=100), nullable=True),
    sa.Column('type', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Reasons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('description')
    )
    op.create_table('Roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.Column('permissions', sa.String(length=10), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('description')
    )
    op.create_index(op.f('ix_Roles_is_admin'), 'Roles', ['is_admin'], unique=False)
    op.create_index(op.f('ix_Roles_permissions'), 'Roles', ['permissions'], unique=False)
    op.create_table('Indicators',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.Column('is_calculated', sa.Boolean(), nullable=True),
    sa.Column('group', sa.Integer(), nullable=True),
    sa.Column('unit', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['group'], ['IndicatorsGroups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Indicators_group'), 'Indicators', ['group'], unique=False)
    op.create_table('ProfileItems',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('profile', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.Column('item_group', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['profile'], ['Profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ProfileItems_profile'), 'ProfileItems', ['profile'], unique=False)
    op.create_table('ResearchGroups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.Column('clinic', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['clinic'], ['Clinics.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('clinic', sa.Integer(), nullable=True),
    sa.Column('time_create', sa.DateTime(), nullable=True),
    sa.Column('password', sa.String(length=100), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('last_visit', sa.DateTime(), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['clinic'], ['Clinics.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Users_email'), 'Users', ['email'], unique=True)
    op.create_table('Histories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clinic', sa.Integer(), nullable=True),
    sa.Column('hist_number', sa.String(length=100), nullable=True),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('date_in', sa.Date(), nullable=True),
    sa.Column('patient', sa.Integer(), nullable=True),
    sa.Column('research_group', sa.Integer(), nullable=True),
    sa.Column('doctor_researcher', sa.Integer(), nullable=True),
    sa.Column('date_research_in', sa.Date(), nullable=True),
    sa.Column('date_research_out', sa.Date(), nullable=True),
    sa.Column('reason', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['clinic'], ['Clinics.id'], ),
    sa.ForeignKeyConstraint(['doctor_researcher'], ['Doctors.id'], ),
    sa.ForeignKeyConstraint(['patient'], ['Patients.id'], ),
    sa.ForeignKeyConstraint(['reason'], ['Reasons.id'], ),
    sa.ForeignKeyConstraint(['research_group'], ['ResearchGroups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Histories_clinic'), 'Histories', ['clinic'], unique=False)
    op.create_index(op.f('ix_Histories_doctor_researcher'), 'Histories', ['doctor_researcher'], unique=False)
    op.create_index(op.f('ix_Histories_research_group'), 'Histories', ['research_group'], unique=False)
    op.create_table('IndicatorsDefs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('indicator', sa.Integer(), nullable=True),
    sa.Column('text_value', sa.String(length=100), nullable=True),
    sa.Column('num_value', sa.Numeric(), nullable=True),
    sa.Column('id_value', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['indicator'], ['Indicators.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_IndicatorsDefs_indicator'), 'IndicatorsDefs', ['indicator'], unique=False)
    op.create_table('IndicatorsNorms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('indicator', sa.Integer(), nullable=True),
    sa.Column('nvalue_from', sa.Numeric(), nullable=True),
    sa.Column('nvalue_to', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['indicator'], ['Indicators.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_IndicatorsNorms_indicator'), 'IndicatorsNorms', ['indicator'], unique=False)
    op.create_table('ProfilesAnswers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('profile', sa.Integer(), nullable=True),
    sa.Column('profile_item', sa.Integer(), nullable=True),
    sa.Column('response', sa.String(length=100), nullable=True),
    sa.Column('response_value', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['profile'], ['Profiles.id'], ),
    sa.ForeignKeyConstraint(['profile_item'], ['ProfileItems.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ProfilesAnswers_profile'), 'ProfilesAnswers', ['profile'], unique=False)
    op.create_table('UserRoles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user', sa.Integer(), nullable=True),
    sa.Column('role', sa.Integer(), nullable=True),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['role'], ['Roles.id'], ),
    sa.ForeignKeyConstraint(['user'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Diagnoses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clinic', sa.Integer(), nullable=True),
    sa.Column('history', sa.Integer(), nullable=True),
    sa.Column('patient', sa.Integer(), nullable=True),
    sa.Column('diagnose', sa.Integer(), nullable=True),
    sa.Column('side_damage', sa.String(length=100), nullable=True),
    sa.Column('date_created', sa.Date(), nullable=True),
    sa.Column('prothes', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['clinic'], ['Clinics.id'], ),
    sa.ForeignKeyConstraint(['diagnose'], ['Diagnoses.id'], ),
    sa.ForeignKeyConstraint(['history'], ['Histories.id'], ),
    sa.ForeignKeyConstraint(['patient'], ['Patients.id'], ),
    sa.ForeignKeyConstraint(['prothes'], ['Prosthesis.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Diagnoses_clinic'), 'Diagnoses', ['clinic'], unique=False)
    op.create_index(op.f('ix_Diagnoses_history'), 'Diagnoses', ['history'], unique=False)
    op.create_table('HistoryEvents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clinic', sa.Integer(), nullable=True),
    sa.Column('history', sa.Integer(), nullable=True),
    sa.Column('patient', sa.Integer(), nullable=True),
    sa.Column('event', sa.Integer(), nullable=True),
    sa.Column('date_begin', sa.Date(), nullable=True),
    sa.Column('date_end', sa.Date(), nullable=True),
    sa.Column('doctor', sa.Integer(), nullable=True),
    sa.Column('doctor_researcher', sa.Integer(), nullable=True),
    sa.Column('doctor_chief', sa.Integer(), nullable=True),
    sa.Column('days1', sa.Integer(), nullable=True),
    sa.Column('days2', sa.Integer(), nullable=True),
    sa.Column('days3', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['clinic'], ['Clinics.id'], ),
    sa.ForeignKeyConstraint(['doctor'], ['Doctors.id'], ),
    sa.ForeignKeyConstraint(['doctor_chief'], ['Doctors.id'], ),
    sa.ForeignKeyConstraint(['doctor_researcher'], ['Doctors.id'], ),
    sa.ForeignKeyConstraint(['event'], ['Events.id'], ),
    sa.ForeignKeyConstraint(['history'], ['Histories.id'], ),
    sa.ForeignKeyConstraint(['patient'], ['Patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_HistoryEvents_doctor'), 'HistoryEvents', ['doctor'], unique=False)
    op.create_index(op.f('ix_HistoryEvents_doctor_chief'), 'HistoryEvents', ['doctor_chief'], unique=False)
    op.create_index(op.f('ix_HistoryEvents_doctor_researcher'), 'HistoryEvents', ['doctor_researcher'], unique=False)
    op.create_index(op.f('ix_HistoryEvents_event'), 'HistoryEvents', ['event'], unique=False)
    op.create_table('Operations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clinic', sa.Integer(), nullable=True),
    sa.Column('history', sa.Integer(), nullable=True),
    sa.Column('patient', sa.Integer(), nullable=True),
    sa.Column('doctor_surgeon', sa.Integer(), nullable=True),
    sa.Column('doctor_assistant', sa.Integer(), nullable=True),
    sa.Column('operation_order', sa.Integer(), nullable=True),
    sa.Column('time_begin', sa.DateTime(), nullable=True),
    sa.Column('time_end', sa.DateTime(), nullable=True),
    sa.Column('duration_min', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['clinic'], ['Clinics.id'], ),
    sa.ForeignKeyConstraint(['doctor_assistant'], ['Doctors.id'], ),
    sa.ForeignKeyConstraint(['doctor_surgeon'], ['Doctors.id'], ),
    sa.ForeignKeyConstraint(['history'], ['Histories.id'], ),
    sa.ForeignKeyConstraint(['patient'], ['Patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Operations_clinic'), 'Operations', ['clinic'], unique=False)
    op.create_table('IndicatorValues',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clinic', sa.Integer(), nullable=True),
    sa.Column('history', sa.Integer(), nullable=True),
    sa.Column('patient', sa.Integer(), nullable=True),
    sa.Column('history_event', sa.Integer(), nullable=True),
    sa.Column('indicator', sa.Integer(), nullable=True),
    sa.Column('slice', sa.String(length=100), nullable=True),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('date_value', sa.Date(), nullable=True),
    sa.Column('text_value', sa.String(length=100), nullable=True),
    sa.Column('num_value', sa.Numeric(), nullable=True),
    sa.Column('num_deviation', sa.Numeric(), nullable=True),
    sa.Column('comment', sa.String(length=500), nullable=True),
    sa.ForeignKeyConstraint(['clinic'], ['Clinics.id'], ),
    sa.ForeignKeyConstraint(['history'], ['Histories.id'], ),
    sa.ForeignKeyConstraint(['history_event'], ['HistoryEvents.id'], ),
    sa.ForeignKeyConstraint(['indicator'], ['Indicators.id'], ),
    sa.ForeignKeyConstraint(['patient'], ['Patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_IndicatorValues_clinic'), 'IndicatorValues', ['clinic'], unique=False)
    op.create_index(op.f('ix_IndicatorValues_history'), 'IndicatorValues', ['history'], unique=False)
    op.create_table('OperationComp',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clinic', sa.Integer(), nullable=True),
    sa.Column('history', sa.Integer(), nullable=True),
    sa.Column('patient', sa.Integer(), nullable=True),
    sa.Column('operation', sa.Integer(), nullable=True),
    sa.Column('complication', sa.Integer(), nullable=True),
    sa.Column('date_begin', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['clinic'], ['Clinics.id'], ),
    sa.ForeignKeyConstraint(['complication'], ['Complications.id'], ),
    sa.ForeignKeyConstraint(['history'], ['Histories.id'], ),
    sa.ForeignKeyConstraint(['operation'], ['Operations.id'], ),
    sa.ForeignKeyConstraint(['patient'], ['Patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_OperationComp_clinic'), 'OperationComp', ['clinic'], unique=False)
    op.create_table('OperationLog',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clinic', sa.Integer(), nullable=True),
    sa.Column('history', sa.Integer(), nullable=True),
    sa.Column('patient', sa.Integer(), nullable=True),
    sa.Column('operation', sa.Integer(), nullable=True),
    sa.Column('operation_step', sa.Integer(), nullable=True),
    sa.Column('time_begin', sa.DateTime(), nullable=True),
    sa.Column('time_end', sa.DateTime(), nullable=True),
    sa.Column('duration_min', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['clinic'], ['Clinics.id'], ),
    sa.ForeignKeyConstraint(['history'], ['Histories.id'], ),
    sa.ForeignKeyConstraint(['operation'], ['Operations.id'], ),
    sa.ForeignKeyConstraint(['operation_step'], ['OperationSteps.id'], ),
    sa.ForeignKeyConstraint(['patient'], ['Patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_OperationLog_clinic'), 'OperationLog', ['clinic'], unique=False)
    op.create_table('ProfileResponses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clinic', sa.Integer(), nullable=True),
    sa.Column('history', sa.Integer(), nullable=True),
    sa.Column('patient', sa.Integer(), nullable=True),
    sa.Column('history_event', sa.Integer(), nullable=True),
    sa.Column('profile', sa.Integer(), nullable=True),
    sa.Column('profile_item', sa.Integer(), nullable=True),
    sa.Column('response', sa.String(length=100), nullable=True),
    sa.Column('response_value', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['clinic'], ['Clinics.id'], ),
    sa.ForeignKeyConstraint(['history'], ['Histories.id'], ),
    sa.ForeignKeyConstraint(['history_event'], ['HistoryEvents.id'], ),
    sa.ForeignKeyConstraint(['patient'], ['Patients.id'], ),
    sa.ForeignKeyConstraint(['profile'], ['Profiles.id'], ),
    sa.ForeignKeyConstraint(['profile_item'], ['ProfileItems.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ProfileResponses_clinic'), 'ProfileResponses', ['clinic'], unique=False)
    op.create_index(op.f('ix_ProfileResponses_profile'), 'ProfileResponses', ['profile'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_ProfileResponses_profile'), table_name='ProfileResponses')
    op.drop_index(op.f('ix_ProfileResponses_clinic'), table_name='ProfileResponses')
    op.drop_table('ProfileResponses')
    op.drop_index(op.f('ix_OperationLog_clinic'), table_name='OperationLog')
    op.drop_table('OperationLog')
    op.drop_index(op.f('ix_OperationComp_clinic'), table_name='OperationComp')
    op.drop_table('OperationComp')
    op.drop_index(op.f('ix_IndicatorValues_history'), table_name='IndicatorValues')
    op.drop_index(op.f('ix_IndicatorValues_clinic'), table_name='IndicatorValues')
    op.drop_table('IndicatorValues')
    op.drop_index(op.f('ix_Operations_clinic'), table_name='Operations')
    op.drop_table('Operations')
    op.drop_index(op.f('ix_HistoryEvents_event'), table_name='HistoryEvents')
    op.drop_index(op.f('ix_HistoryEvents_doctor_researcher'), table_name='HistoryEvents')
    op.drop_index(op.f('ix_HistoryEvents_doctor_chief'), table_name='HistoryEvents')
    op.drop_index(op.f('ix_HistoryEvents_doctor'), table_name='HistoryEvents')
    op.drop_table('HistoryEvents')
    op.drop_index(op.f('ix_Diagnoses_history'), table_name='Diagnoses')
    op.drop_index(op.f('ix_Diagnoses_clinic'), table_name='Diagnoses')
    op.drop_table('Diagnoses')
    op.drop_table('UserRoles')
    op.drop_index(op.f('ix_ProfilesAnswers_profile'), table_name='ProfilesAnswers')
    op.drop_table('ProfilesAnswers')
    op.drop_index(op.f('ix_IndicatorsNorms_indicator'), table_name='IndicatorsNorms')
    op.drop_table('IndicatorsNorms')
    op.drop_index(op.f('ix_IndicatorsDefs_indicator'), table_name='IndicatorsDefs')
    op.drop_table('IndicatorsDefs')
    op.drop_index(op.f('ix_Histories_research_group'), table_name='Histories')
    op.drop_index(op.f('ix_Histories_doctor_researcher'), table_name='Histories')
    op.drop_index(op.f('ix_Histories_clinic'), table_name='Histories')
    op.drop_table('Histories')
    op.drop_index(op.f('ix_Users_email'), table_name='Users')
    op.drop_table('Users')
    op.drop_table('ResearchGroups')
    op.drop_index(op.f('ix_ProfileItems_profile'), table_name='ProfileItems')
    op.drop_table('ProfileItems')
    op.drop_index(op.f('ix_Indicators_group'), table_name='Indicators')
    op.drop_table('Indicators')
    op.drop_index(op.f('ix_Roles_permissions'), table_name='Roles')
    op.drop_index(op.f('ix_Roles_is_admin'), table_name='Roles')
    op.drop_table('Roles')
    op.drop_table('Reasons')
    op.drop_table('Prosthesis')
    op.drop_table('Profiles')
    op.drop_index(op.f('ix_Patients_sex'), table_name='Patients')
    op.drop_table('Patients')
    op.drop_table('OperationSteps')
    op.drop_table('IndicatorsGroups')
    op.drop_index(op.f('ix_Events_type'), table_name='Events')
    op.drop_table('Events')
    op.drop_table('Doctors')
    op.drop_index(op.f('ix_DiagnosesItems_type'), table_name='DiagnosesItems')
    op.drop_table('DiagnosesItems')
    op.drop_index(op.f('ix_Complications_type'), table_name='Complications')
    op.drop_table('Complications')
    op.drop_table('Clinics')
    # ### end Alembic commands ###
